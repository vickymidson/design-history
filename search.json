[  {
    "title": "An example post with screenshots",
"description": "This example was generated using a script and shows how to automatically include a list of screenshots at the end of your post.","section": "Home",    "layout": "post",
"date": "2019-12-31T00:00:00.000Z",
    "dateString": "31 December 2019",    "templateContent": "this example standard design history post begins with preamble about ends list screenshots some real examples are: apply teacher training: reasons withdrawing application manage applications: deferring find postgraduate snapshot service page generated after were saved app images directory using following command: node scripts generate.js read guide how use script can print preview see that each screenshot given its own",
    "url": "/design-history/example-post/"
  },  {
    "title": "Divide a design history into different sections",
"description": "Learn how to divide your design history site into different sections. You can use this if your team is building multiple products or services.","section": "Home",    "layout": "post",
"date": "2020-01-01T00:00:00.000Z",
    "dateString": "1 January 2020",    "templateContent": "your service different parts example public facing admin interface may want divide history into sections each part set folder section can group posts together using folders: create app use dashes instead spaces names .json file same name support json would interface.json this directory data used default values all that sit within declare tag which should these related parent breadcrumb navigation being { &quot tags&quot : interface&quot eleventynavigation&quot parent&quot } index page next lists by creating markdown .md add interface.md top front matter data: layout: collection title: description: tool agents manage pagination: collections.support reverse: true size: 50 permalink: {% pagination.pagenumber &gt 0 %}page {{ + 1 }} endif %} value pagination.data created added tells list need any body content will appear above update home link currently homepage site change only are linked removing lines from index.md collections.post posts: getting started heading adding sections: services",
    "url": "/design-history/divide-a-design-history-into-different-sections/"
  },  {
    "title": "Generate a page of screenshots",
"description": "Learn how to use the 2 scripts that generate posts containing a series of screenshots.","section": "Home",    "layout": "post",
"date": "2020-01-02T00:00:00.000Z",
    "dateString": "2 January 2020",    "templateContent": "design history project provides 2 scripts help generate post featuring list screenshots see example first allows capture these from sequence urls perhaps user journey have prototyped second page folder images with taken open screenshot.js this file will values: domain : website want screenshot eg localhost:3000 paths array named replace your desired values terminal type: node name feature will: visit each lists save those directory index listed order following screenshots.js const = &#x27 http: localhost:3000&#x27 { title start page&#x27 path } personal details&#x27 check answers&#x27 confirmation&#x27 running submit details images: app page.png details.png answers.png confirmation also created using current date example: posts 2023 01 06 details.md create new within add inside generated alphabetical them appear can use numbered prefixes ie 02 question generate.js holding creating containing pre populated screenshots: title: date: items: &quot page&quot details&quot answers&quot confirmation&quot change any src value tell component what filename look text: src: different image.jpg",
    "url": "/design-history/generate-a-page-of-screenshots/"
  },  {
    "title": "Set up a design history",
"description": "Learn how to install, customise and publish your design history.","section": "Home",    "layout": "post",
"date": "2020-01-03T00:00:00.000Z",
    "dateString": "3 January 2020",    "templateContent": "this project makes easy : create pages screenshots document designs using gov.uk design system print make shareable linkable built eleventy static site generator meaning your history can adapted service grows post describes how get started install start by making copy easiest way github visit govuk repository click use asked choose user organisation that should own new name changes need download computer assuming username called terminal would type: git clone git@github.com: history.git next change into downloaded folder all dependencies needed run typing following: cd npm preview before uploading public url useful locally once files have been generated will shown which enter address bar usually http: localhost:8081 whenever add edit existing browser automatically refresh page with any applied customise adding posts probably want few things sense website open file app _data app.js value productname appear header titles update homepage index.md title give here used large heading top description text appears below also remove line show anything footer link other tools team uses place these links _layouts base.njk near bottom notice there nunjucks component govukfooter components from example follow guidance adapt suit needs now ready documenting post: named format yyyy mm dd slug.md where: year month day slug example: 2020 02 19 first designs.md reached &lt history&gt are made 2 parts: front matter its contents starts ends written key data yaml most cases only three bits information: date title: minimum viable description: could allow providers access manage their itt applications date: content portion markdown lightweight markup language formatting elements plaintext documents learn more about writing guide save see listed home launch them better deploying third party host includes support different services heroku netlify connecting ensure deployed they merged default branch process very similar setting prototype password protect found keep yours environment variables calls config vars set procfile root following content: web: http server $username $password p $port websites when build command",
    "url": "/design-history/set-up-a-design-history/"
  },  {
    "title": "How a design history has helped",
"description": "A case study on the Becoming a Teacher team’s design history – how it’s been used and the story behind it.","section": "Home",    "layout": "post",
"date": "2020-01-04T00:00:00.000Z",
    "dateString": "4 January 2020",    "templateContent": "becoming teacher team been using design history document evolution find postgraduate training apply services since they began may 2018 our public record designs tells story what designed why: https: bat history.netlify.app value documenting looks forwards backwards new posts show where service going highlight will researched built next can draw attention important points old tell us how got here with them can: discover did why re evaluate decisions see feature changed things tested research give context members work tried build looked significant milestones by making open share reasoning behind whether colleagues other teams rest government assessors make makes better were struggling started trying upload screenshots confluence this cumbersome versioning prototypes keep around different urls too frequently prototype could documented needed quick easy would seen chore used gov.uk kit first hosted heroku made create pages each showing list alongside descriptions had page now url put into trello cards pull requests example early post when clear these useful creating easier automated process scripts taking saving images right place generating all markup focus writing about rather than task recording system use readable familiar platform felt from start recorded findings link playbacks video clips lookback tool remote user direct between source finding over time begin callout specific changes evidencing went entries more grew like snapshots such launch beta publishing prototyping complex its logic become hidden code only visible particular journeys rules scenarios emerged became natural describe developers those features ask candidates their nationality describes asking multiple nationalities explains happens 2 3 are works without javascript accessible occasionally print wall group sessions typically shows complete journey printing ideal added styles meaning that printed one screenshot title per information users emails send processes followed contributions people contribute anyone switched eleventy static site generator blogs unlike while gave structure description date also meant html which difficult some write markdown everyone understood designers content researchers contributing use: pagination sorting category related links importantly given volume search july 2020 5 products 200 want designing something looking have solved problem read created enable repository guides getting continue add need ways needs hypotheses integration tools hope opening developments ideas outside",
    "url": "/design-history/keeping-a-design-history/"
  },  {
    "title": "What is a design history?",
"description": "Learn how a design history can help your team log design decisions and create a permanent record of how your service has developed over time.","section": "Home",    "layout": "post",
"date": "2020-01-05T00:00:00.000Z",
    "dateString": "5 January 2020",    "templateContent": "when designing building service can easy forget why previous decisions were made even more new people join team others leave design history help by creating permanent record site like blog with posts describing development features iterations existing ones findings from user research anything that may useful return later this project developed becoming teacher department education who found keeping they could: re evaluate see how feature changed over time things tested give context members demonstrate reasons certain did work create snapshots looked significant milestones share across government everything assessors february 2020 includes than 200 documenting 5 different services learn about created their dfe digital",
    "url": "/design-history/what-is-a-design-history/"
  },  {
    "title": "Snapshot of apply for a juggling licence service",
"description": "We’ve taken a snapshot of the entire end-to-end service that was deployed on 3 January 2023.","section": "Home",    "layout": "post",
"date": "2023-01-03T00:00:00.000Z",
    "dateString": "3 January 2023",    "templateContent": "taken snapshot entire end service that deployed 3 january 2023 something important about this only circus professionals who: need juggle legally dangerous juggling without licence have skills users must trained extensively before applying understand can apply their using our",
    "url": "/design-history/service-snapshot/"
  },  {
    "title": "Telling users they are not eligible",
"description": "How we're making sure only circus professionals can apply for a juggling licence.","section": "Home",    "layout": "post",
"date": "2023-01-05T00:00:00.000Z",
    "dateString": "5 January 2023",    "templateContent": "users that are extensively trained circus professionals cannot use our service issue many juggling licence applications made by leading rejections despite information start page explaining who can apply non still applying what did have introduced kick out after asking how balls their answer less than three user goes tells them they eligible initial results tested ineligible journey with found most had difficulty this understood happened application research findings usability testing next steps will go into development coming sprints",
    "url": "/design-history/telling-users-they-are-not-eligible/"
  },  {
    "title": "Apply for a juggling licence design history",
"description": "A service for circus professionals to submit an application to get a juggling licence.",    "layout": "home",
    "templateContent": "",
    "url": "/design-history/"
  }]
